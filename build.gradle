buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'org.springframework.boot:spring-boot-gradle-plugin:1.5.19.RELEASE'
    }
}

plugins {
    id 'java'
}

apply plugin: 'org.springframework.boot'

group = 'org.ys'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
    mavenCentral()
}


allprojects {
    repositories {
        def REPOSITORY_URL = System.getenv("MAVEN_REPOSITORY_URL") ?: 'http://maven.aliyun.com/nexus/content/groups/public/'
        all { ArtifactRepository repo ->
            if (repo instanceof MavenArtifactRepository) {
                def url = repo.url.toString()
                if (url.startsWith('https://repo1.maven.org/maven2') || url.startsWith('https://jcenter.bintray.com/')) {
                    project.logger.lifecycle "Repository ${repo.url} replaced by $REPOSITORY_URL."
                    remove repo
                }
            }
        }
        maven {
            url REPOSITORY_URL
        }
        maven { url System.getenv("MAVEN_REPOSITORY_URL") ?: "https://jitpack.io" }


        maven { url System.getenv("MAVEN_REPOSITORY_URL") ?: 'http://maven.aliyun.com/nexus/content/repositories/jcenter' }
    }

    apply plugin: 'idea'
    apply plugin: 'application'
    applicationDefaultJvmArgs = ["-Xms1024m", "-Xmx1510m"]
}

dependencies {
    compile 'org.springframework.boot:spring-boot-starter-web'
    // 健康检查
    compile('org.springframework.boot:spring-boot-starter-actuator')
    // springmvc
    compile('org.springframework.cloud:spring-cloud-starter')

    // http客户端
    compile('org.springframework.cloud:spring-cloud-starter-feign')
    // 降级处理
    compile('org.springframework.cloud:spring-cloud-starter-hystrix')
    compile('org.springframework.cloud:spring-cloud-starter-hystrix-dashboard')
    // 客户端负载均衡
    compile('org.springframework.cloud:spring-cloud-starter-ribbon')
    // 链路追踪
    compile('org.springframework.cloud:spring-cloud-starter-sleuth')
    compile('org.springframework.cloud:spring-cloud-starter-zipkin')
    // API网关
    compile('org.springframework.cloud:spring-cloud-starter-zuul')
    runtime('org.springframework.boot:spring-boot-devtools')
    testCompile 'org.springframework.boot:spring-boot-starter-test'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-security'

    // swagger
    compile SWAGGER_UI
    compile SWAGGER_CORE

    compile project(':utils')
    compile project(':global')
    compile project(":service-impl")

}
